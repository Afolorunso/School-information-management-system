.navbar{
	background-color:#fff !important;
	padding:18px !important;
	font-weight: bold;
	border-radius: none;
	/*border-bottom: 2px  solid rgba(190,12,104,0.4) !important;*/
}

.navbar li{
	margin-left: 5px !important;
}

.navbar-brand{
	margin-left: 40px !important;
}

.dropdown, .dropdown-menu,  a{
	color: #111 !important;
	font-size: 16px !important;

}

.dropdown h5{
	text-align: center;
}
.navbar-header button{
	font-size: 30px;
	color: #be0c5f !important;
}

.carousel-inner img{
	width: 100% !important;
	height: 500px !important;
}
.fac{
	background-color:transparent !important;
	box-shadow: none !important;
	border:none !important;
}
.dropdown-menu{
	border-top: 5px solid #be0c5f !important;

}

.jumb{
	background-color:rgba(190,12,104,0.1) !important;
	color: #fff !important;
	/*width: 60%;*/
}

.badge{
	background-color: #be0c5f !important;

}

.btn-sims{
	background-color: #be0c5f !important;
	color:#fff;
	border:none;
	transition: .5s all;
}

.btn-sims:hover{
	background-color:rgba(190,12,104,0.6) !important;
	color: #111 !important;
}
.history{
	width: 100% !important;
	margin-top: 3% !important;
	box-shadow: 0px 0px 0px 1px rgba(0,0,0,0.2);
}

/*// Creates a wrapper for a series of columns*/
.make-row(@gutter: @grid-gutter-width) {
  // Then clear the floated columns
  .clearfix();

  @media (min-width: @screen-sm-min) {
    margin-left:  (@gutter / -2);
    margin-right: (@gutter / -2);
  }

  /*// Negative margin nested rows out to align the content of columns*/
  .row {
    margin-left:  (@gutter / -2);
    margin-right: (@gutter / -2);
  }
}

/*// Generate the extra small columns*/
.make-xs-column(@columns; @gutter: @grid-gutter-width) {
  position: relative;
  /*// Prevent columns from collapsing when empty*/
  min-height: 1px;
  /*// Inner gutter via padding*/
  padding-left:  (@gutter / 2);
  padding-right: (@gutter / 2);

  /*// Calculate width based on number of columns available*/
  @media (min-width: @grid-float-breakpoint) {
    float: left;
    width: percentage((@columns / @grid-columns));
  }
}

/*// Generate the small columns*/
.make-sm-column(@columns; @gutter: @grid-gutter-width) {
  position: relative;
  /*// Prevent columns from collapsing when empty*/
  min-height: 1px;
  /*// Inner gutter via padding*/
  padding-left:  (@gutter / 2);
  padding-right: (@gutter / 2);

  /*// Calculate width based on number of columns available*/
  @media (min-width: @screen-sm-min) {
    float: left;
    width: percentage((@columns / @grid-columns));
  }
}

/*// Generate the small column offsets*/
.make-sm-column-offset(@columns) {
  @media (min-width: @screen-sm-min) {
    margin-left: percentage((@columns / @grid-columns));
  }
}
.make-sm-column-push(@columns) {
  @media (min-width: @screen-sm-min) {
    left: percentage((@columns / @grid-columns));
  }
}
.make-sm-column-pull(@columns) {
  @media (min-width: @screen-sm-min) {
    right: percentage((@columns / @grid-columns));
  }
}

/*// Generate the medium columns*/
.make-md-column(@columns; @gutter: @grid-gutter-width) {
  position: relative;
  /*// Prevent columns from collapsing when empty*/
  min-height: 1px;
  /*// Inner gutter via padding*/
  padding-left:  (@gutter / 2);
  padding-right: (@gutter / 2);

  /*// Calculate width based on number of columns available*/
  @media (min-width: @screen-md-min) {
    float: left;
    width: percentage((@columns / @grid-columns));
  }
}

/*// Generate the medium column offsets*/
.make-md-column-offset(@columns) {
  @media (min-width: @screen-md-min) {
    margin-left: percentage((@columns / @grid-columns));
  }
}
.make-md-column-push(@columns) {
  @media (min-width: @screen-md-min) {
    left: percentage((@columns / @grid-columns));
  }
}
.make-md-column-pull(@columns) {
  @media (min-width: @screen-md-min) {
    right: percentage((@columns / @grid-columns));
  }
}

/*// Generate the large columns*/
.make-lg-column(@columns; @gutter: @grid-gutter-width) {
  position: relative;
  /*// Prevent columns from collapsing when empty*/
  min-height: 1px;
  /*// Inner gutter via padding*/
  padding-left:  (@gutter / 2);
  padding-right: (@gutter / 2);

  /*// Calculate width based on number of columns available*/
  @media (min-width: @screen-lg-min) {
    float: left;
    width: percentage((@columns / @grid-columns));
  }
}

/*// Generate the large column offsets*/
.make-lg-column-offset(@columns) {
  @media (min-width: @screen-lg-min) {
    margin-left: percentage((@columns / @grid-columns));
  }
}
.make-lg-column-push(@columns) {
  @media (min-width: @screen-lg-min) {
    left: percentage((@columns / @grid-columns));
  }
}
.make-lg-column-pull(@columns) {
  @media (min-width: @screen-lg-min) {
    right: percentage((@columns / @grid-columns));
  }
}